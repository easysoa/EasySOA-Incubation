<?xml version="1.0"?>
<component name="org.easysoa.registry.doctypes.core.eventlistener.contrib">

  <require>filemanager.core.listener.icon</require><!-- to override mimetypeIconUpdater listener -->

  <!-- =============== -->
  <!-- Event listeners -->
  <!-- =============== -->

  <!-- Prority set to 150 to run after dcListener, which inits "created" -->

  <extension target="org.nuxeo.ecm.core.event.EventServiceComponent" point="listener">
  
    <!-- RepositoryManagement : moving SOA nodes a their canonical place & proxying them, metadata inheritance... -->
    <listener name="repositoryManagementListener" class="org.easysoa.registry.RepositoryManagementListener" priority="155">
      <event>documentCreated</event>
      <event>documentCreatedByCopy</event>
      <event>documentMoved</event>
      <event>documentModified</event>
      <event>aboutToRemove</event>
    </listener>
    
    <!-- SOA node matching : impl to iserv, endpoint to impl or to iserv through placeholder impl -->
    <listener name="soaNodeMatchingListener" class="org.easysoa.registry.SoaNodeMatchingListener"
    	priority="156">
      <event>documentCreated</event>
      <event>documentModified</event>
    </listener>
    
    <!-- Resource - update (download then parse) on change : -->
    <listener name="resourceListener" class="org.easysoa.registry.types.listeners.ResourceListener"
      priority="151"><!-- async="true" postCommit="true" -->
      <event>documentCreated</event>
      <event>documentModified</event>
    </listener>
    <!-- required by event-based alternative to async impl (EventBasedAsyncResourceUpdateServiceImpl) -->
    <!-- listener name="resourceDownloadListener" class="org.easysoa.registry.types.listeners.AsyncResourceDownloadListener"
      async="true" postCommit="true">
      <event>readyToDownloadResource</event>
    </listener --><!-- no priority because listens only to custom event (and async) -->
    <!-- TODO : Refactoring ? modify event for wsdlParsingListener ?? -->
    <listener name="wsdlParsingListener" class="org.easysoa.registry.types.listeners.WSDLParsingListener"
      priority="152">
      <event>resourceDownloaded</event><!-- triggered by ResourceUpdateService, or directly ResourceListener if not downloadable -->
    </listener>
    
    <!-- Resource - periodic refresh : -->
    <listener name="refreshResourcesListener" class="org.easysoa.registry.types.listeners.RefreshResourcesListener"
      async="true" postCommit="true">
      <event>refreshResources</event><!-- triggered by ResourceUpdateService, or directly ResourceListener if not downloadable -->
      <!-- no priority because listens only to custom event (and async) -->
    </listener>
    
    <listener name="componentListener" class="org.easysoa.registry.types.listeners.ComponentListener"
      priority="151">
      <event>documentCreated</event>
      <event>beforeDocumentModification</event>
    </listener>
    
    <!-- Subproject Node : copy of spnode metadata on all subnodes -->
    <listener name="subprojectListener" class="org.easysoa.registry.subproject.SubprojectNodeListener"
      priority="150">
      <event>aboutToCreate</event>
      <event>beforeDocumentModification</event><!-- TODO test -->
      
      <event>documentCreatedByCopy</event>
      <!-- event>documentMoved</event --><!-- TODO first handle proxies to it... -->
    </listener>
    
    <!-- OBSOLETE replaced by logic before and after snapshotting, see SubprojectServiceImpl.createSubprojectVersion() -->
    <!-- listener name="treeSnapshotListener" class="org.easysoa.registry.subproject.TreeSnapshotListener"
      priority="151">
      <event>aboutToCreateLeafVersionEvent</event>
    </listener -->
    
    <!-- Overriding so document icons will always stay set to their type icon and never become their mimetype
    icon (otherwise, WSDL etc. mimetypes should be given pretty service + XML / graffle.png icons) -->
    <listener name="mimetypeIconUpdater" async="false" postCommit="false" class="org.easysoa.registry.types.listeners.TypeIconMimetypeIconUpdater" priority="120">
      <event>aboutToCreate</event>
      <event>beforeDocumentModification</event>
    </listener>
    
  </extension>

</component>
